<style>th, td {
    padding: 45px;
    text-align: left;
}

h1 {
    font-family: 'Open Sans Condensed', sans-serif;
    letter-spacing: 1px;
    font-size: 2.3em;
    line-height: 44px;
    text-transform: uppercase;
    color: #0059b3;
    /*font-weight: 900;*/
    margin: 0;
    padding: 10px 0 0 30px;
    letter-spacing: 1px;
    /*background-color: black*/
}

</style>


<font size="3" face="courier " >
<h3>Name</h3>
<div class="box">

    <!-- <Button id="btn_add_new" class="btn btn-primary pull-right new-item">Add word</Button> -->
    <!-- /.box-header -->
    <div class="box-body commit-lists">
        <!-- <input id="hdAdminArea" type="hidden" value="{{user.isAdmin}}"> -->
        <!--  {{#haveRecord words}} -->
        <table id="tbl_assigned_repos" class="table table-bordered table-striped">
            <!-- <table id="tbl_assigned_repos"> -->
            <thead>
                <tr style="color:#004d66;">
                <th onclick="sortTable1(0)"><a>Name <i class="fa fa-sort" style="font-size:10px;padding: 15px;"></i></a></th>
                    <!-- <th onclick="sortTable1(0)">name</th> -->
                    <th onclick="sortTable1(1)"><a>Word <i class="fa fa-sort" style="font-size:10px;padding: 15px;"></i></a></th>
                    <th onclick="sortTable1(1)"><a>Gender <i class="fa fa-sort" style="font-size:10px;padding: 15px;"></i></a></th>
                    <!-- <th onclick="sortTable1(1)">Created At <i class="fa fa-sort" style="font-size:10px;"></i></th> -->
                    <!-- <th>fullName</th> -->
                   <!--  <th></th> -->
                </tr>
            </thead>
            <tbody>
                {{#each words}}
                <tr class="odd gradeX">
                    <td height="100">{{this.name}}</td>
                    <td>{{this.word}}</td>
                    <td>{{this.gender}}</td>
                    <!-- <td>{{this.createdAt}}</td> -->
                </tr>
                
                {{/each}}
            </tbody>
        </table>
        {{/haveRecord}}


    </div>

<!-- =================sorting tables script ============= -->
        <script>
function sortTable1(n) {
  var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
  table = document.getElementById("tbl_assigned_repos");
  switching = true;
  //Set the sorting direction to ascending:
  dir = "asc"; 
  /*Make a loop that will continue until
  no switching has been done:*/
  while (switching) {
    //start by saying: no switching is done:
    switching = false;
    rows = table.getElementsByTagName("TR");
    /*Loop through all table rows (except the
    first, which contains table headers):*/
    for (i = 1; i < (rows.length - 1); i++) {
      //start by saying there should be no switching:
      shouldSwitch = false;
      /*Get the two elements you want to compare,
      one from current row and one from the next:*/
      x = rows[i].getElementsByTagName("TD")[n];
      y = rows[i + 1].getElementsByTagName("TD")[n];
      /*check if the two rows should switch place,
      based on the direction, asc or desc:*/
      if (dir == "asc") {
        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
          //if so, mark as a switch and break the loop:
          shouldSwitch= true;
          break;
        }
      } else if (dir == "desc") {
        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
          //if so, mark as a switch and break the loop:
          shouldSwitch= true;
          break;
        }
      }
    }
    if (shouldSwitch) {
      /*If a switch has been marked, make the switch
      and mark that a switch has been done:*/
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
      //Each time a switch is done, increase this count by 1:
      switchcount ++;      
    } else {
      /*If no switching has been done AND the direction is "asc",
      set the direction to "desc" and run the while loop again.*/
      if (switchcount == 0 && dir == "asc") {
        dir = "desc";
        switching = true;
      }
    }
  }
}
</script>

</div>



<h3>Place</h3>
<div class="box">
  <div class="box-body commit-lists">
        <!-- <input id="hdAdminArea" type="hidden" value="{{user.isAdmin}}"> -->
        <!--  {{#haveRecord words2}} -->
        <table id="tbl_assigned_repos_place" class="table table-bordered table-striped">
            <!-- <table id="tbl_assigned_repos"> -->
            <thead>
                <tr style="color:#004d66;">
                    <th onclick="sortTable2(0)"><a>name <i class="fa fa-sort" style="font-size:10px;padding: 15px;"></a></i></th>
                    <th onclick="sortTable2(1)"><a>word <i class="fa fa-sort" style="font-size:10px;padding: 15px;"></a></i></th>
                    <!-- <th onclick="sortTable2(1)">created At <i class="fa fa-sort" style="font-size:10px;"></i></th> -->
                    <!-- <th>fullName</th> -->
                   <!--  <th></th> -->
                </tr>
            </thead>
            <tbody>
                {{#each words2}}
                <tr class="odd gradeX">
                    <td height="100">{{this.name}}</td>
                    <td>{{this.word}}</td>
                   <!--  <td>{{this.createdAt}}</td> -->
                    <!-- <td>{{this.fullName}}</td> -->
                </tr>
                
                {{/each}}
            </tbody>
        </table>
        {{/haveRecord}}
    </div>

    <!-- =================sorting tables script ============= -->
        <script>
function sortTable2(n) {
  var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
  table = document.getElementById("tbl_assigned_repos_place");
  switching = true;
  //Set the sorting direction to ascending:
  dir = "asc"; 
  /*Make a loop that will continue until
  no switching has been done:*/
  while (switching) {
    //start by saying: no switching is done:
    switching = false;
    rows = table.getElementsByTagName("TR");
    /*Loop through all table rows (except the
    first, which contains table headers):*/
    for (i = 1; i < (rows.length - 1); i++) {
      //start by saying there should be no switching:
      shouldSwitch = false;
      /*Get the two elements you want to compare,
      one from current row and one from the next:*/
      x = rows[i].getElementsByTagName("TD")[n];
      y = rows[i + 1].getElementsByTagName("TD")[n];
      /*check if the two rows should switch place,
      based on the direction, asc or desc:*/
      if (dir == "asc") {
        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
          //if so, mark as a switch and break the loop:
          shouldSwitch= true;
          break;
        }
      } else if (dir == "desc") {
        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
          //if so, mark as a switch and break the loop:
          shouldSwitch= true;
          break;
        }
      }
    }
    if (shouldSwitch) {
      /*If a switch has been marked, make the switch
      and mark that a switch has been done:*/
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
      //Each time a switch is done, increase this count by 1:
      switchcount ++;      
    } else {
      /*If no switching has been done AND the direction is "asc",
      set the direction to "desc" and run the while loop again.*/
      if (switchcount == 0 && dir == "asc") {
        dir = "desc";
        switching = true;
      }
    }
  }
}
</script>

    </div>

    <h3>Animal</h3>
<div class="box">
  <div class="box-body commit-lists">
        <!-- <input id="hdAdminArea" type="hidden" value="{{user.isAdmin}}"> -->
        <!--  {{#haveRecord words3}} -->
        <table id="tbl_assigned_repos_animal" class="table table-bordered table-striped">
            <!-- <table id="tbl_assigned_repos"> -->
            <thead>
                <tr style="color:#004d66;">
                    <th onclick="sortTable3(0)"><a>name <i class="fa fa-sort" style="font-size:10px;padding: 15px;"></a></i></th>
                    <th onclick="sortTable3(1)"><a>word <i class="fa fa-sort" style="font-size:10px;padding: 15px;"></a></i></th>
                    <!-- <th onclick="sortTable3(1)">created At <i class="fa fa-sort" style="font-size:10px;"></i></th> -->
                    <!-- <th>fullName</th> -->
                   <!--  <th></th> -->
                </tr>
            </thead>
            <tbody>
                {{#each words3}}
                <tr class="odd gradeX">
                    <td height="100">{{this.name}}</td>
                    <td>{{this.word}}</td>
                    <!-- <td>{{this.createdAt}}</td> -->
                    <!-- <td>{{this.fullName}}</td> -->
                </tr>
                
                {{/each}}
            </tbody>
        </table>
        {{/haveRecord}}
    </div>

       <!-- =================sorting tables script ============= -->
        <script>
function sortTable3(n) {
  var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
  table = document.getElementById("tbl_assigned_repos_animal");
  switching = true;
  //Set the sorting direction to ascending:
  dir = "asc"; 
  /*Make a loop that will continue until
  no switching has been done:*/
  while (switching) {
    //start by saying: no switching is done:
    switching = false;
    rows = table.getElementsByTagName("TR");
    /*Loop through all table rows (except the
    first, which contains table headers):*/
    for (i = 1; i < (rows.length - 1); i++) {
      //start by saying there should be no switching:
      shouldSwitch = false;
      /*Get the two elements you want to compare,
      one from current row and one from the next:*/
      x = rows[i].getElementsByTagName("TD")[n];
      y = rows[i + 1].getElementsByTagName("TD")[n];
      /*check if the two rows should switch place,
      based on the direction, asc or desc:*/
      if (dir == "asc") {
        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
          //if so, mark as a switch and break the loop:
          shouldSwitch= true;
          break;
        }
      } else if (dir == "desc") {
        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
          //if so, mark as a switch and break the loop:
          shouldSwitch= true;
          break;
        }
      }
    }
    if (shouldSwitch) {
      /*If a switch has been marked, make the switch
      and mark that a switch has been done:*/
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
      //Each time a switch is done, increase this count by 1:
      switchcount ++;      
    } else {
      /*If no switching has been done AND the direction is "asc",
      set the direction to "desc" and run the while loop again.*/
      if (switchcount == 0 && dir == "asc") {
        dir = "desc";
        switching = true;
      }
    }
  }
}
</script>
    </div>

    <h3>Thing</h3>
<div class="box">
  <div class="box-body commit-lists">
        <!-- <input id="hdAdminArea" type="hidden" value="{{user.isAdmin}}"> -->
        <!--  {{#haveRecord words4}} -->
        <table id="tbl_assigned_repos_thing" class="table table-bordered table-striped">
            <!-- <table id="tbl_assigned_repos"> -->
            <thead>
                <tr style="color:#004d66;">
                    <th onclick="sortTable4(0)"><a>name <i class="fa fa-sort" style="font-size:10px;padding: 15px;"></a></i></th>
                    <th onclick="sortTable4(1)"><a>word <i class="fa fa-sort" style="font-size:10px;padding: 15px;"></a></i></th>
                    <!-- <th onclick="sortTable4(1)">created At <i class="fa fa-sort" style="font-size:10px;"></i></th> -->
                    <!-- <th>fullName</th> -->
                   <!--  <th></th> -->
                </tr>
            </thead>
            <tbody>
                {{#each words4}}
                <tr class="odd gradeX">
                    <td height="100">{{this.name}}</td>
                    <td>{{this.word}}</td>
                    <!-- <td>{{this.createdAt}}</td> -->
                    <!-- <td>{{this.fullName}}</td> -->
                </tr>
                
                {{/each}}
            </tbody>
        </table>
        {{/haveRecord}}
    </div>

       <!-- =================sorting tables script ============= -->
        <script>
function sortTable4(n) {
  var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
  table = document.getElementById("tbl_assigned_repos_thing");
  switching = true;
  //Set the sorting direction to ascending:
  dir = "asc"; 
  /*Make a loop that will continue until
  no switching has been done:*/
  while (switching) {
    //start by saying: no switching is done:
    switching = false;
    rows = table.getElementsByTagName("TR");
    /*Loop through all table rows (except the
    first, which contains table headers):*/
    for (i = 1; i < (rows.length - 1); i++) {
      //start by saying there should be no switching:
      shouldSwitch = false;
      /*Get the two elements you want to compare,
      one from current row and one from the next:*/
      x = rows[i].getElementsByTagName("TD")[n];
      y = rows[i + 1].getElementsByTagName("TD")[n];
      /*check if the two rows should switch place,
      based on the direction, asc or desc:*/
      if (dir == "asc") {
        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
          //if so, mark as a switch and break the loop:
          shouldSwitch= true;
          break;
        }
      } else if (dir == "desc") {
        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
          //if so, mark as a switch and break the loop:
          shouldSwitch= true;
          break;
        }
      }
    }
    if (shouldSwitch) {
      /*If a switch has been marked, make the switch
      and mark that a switch has been done:*/
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
      //Each time a switch is done, increase this count by 1:
      switchcount ++;      
    } else {
      /*If no switching has been done AND the direction is "asc",
      set the direction to "desc" and run the while loop again.*/
      if (switchcount == 0 && dir == "asc") {
        dir = "desc";
        switching = true;
      }
    }
  }
}
</script>
    </div>

    <h3>Plant</h3>
<div class="box">
  <div class="box-body commit-lists">
        <!-- <input id="hdAdminArea" type="hidden" value="{{user.isAdmin}}"> -->
        <!--  {{#haveRecord words5}} -->
        <table id="tbl_assigned_repos_plant" class="table table-bordered table-striped">
            <!-- <table id="tbl_assigned_repos"> -->
            <thead>
                <tr style="color:#004d66;">
                    <th onclick="sortTable5(0)"><a>name <i class="fa fa-sort" style="font-size:10px;padding: 15px;"></a></i></th>
                    <th onclick="sortTable5(1)"><a>word <i class="fa fa-sort" style="font-size:10px;padding: 15px;"></a></i></th>
                    <!-- <th onclick="sortTable5(1)">created At <i class="fa fa-sort" style="font-size:10px;"></i></th> -->
                    <!-- <th>fullName</th> -->
                   <!--  <th></th> -->
                </tr>
            </thead>
            <tbody>
                {{#each words5}}
                <tr class="odd gradeX">
                    <td height="100">{{this.name}}</td>
                    <td>{{this.word}}</td>
                    <!-- <td>{{this.createdAt}}</td> -->
                    <!-- <td>{{this.fullName}}</td> -->
                </tr>
                
                {{/each}}
            </tbody>
        </table>
        {{/haveRecord}}
    </div>

       <!-- =================sorting tables script ============= -->
        <script>
function sortTable5(n) {
  var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
  table = document.getElementById("tbl_assigned_repos_plant");
  switching = true;
  //Set the sorting direction to ascending:
  dir = "asc"; 
  /*Make a loop that will continue until
  no switching has been done:*/
  while (switching) {
    //start by saying: no switching is done:
    switching = false;
    rows = table.getElementsByTagName("TR");
    /*Loop through all table rows (except the
    first, which contains table headers):*/
    for (i = 1; i < (rows.length - 1); i++) {
      //start by saying there should be no switching:
      shouldSwitch = false;
      /*Get the two elements you want to compare,
      one from current row and one from the next:*/
      x = rows[i].getElementsByTagName("TD")[n];
      y = rows[i + 1].getElementsByTagName("TD")[n];
      /*check if the two rows should switch place,
      based on the direction, asc or desc:*/
      if (dir == "asc") {
        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
          //if so, mark as a switch and break the loop:
          shouldSwitch= true;
          break;
        }
      } else if (dir == "desc") {
        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
          //if so, mark as a switch and break the loop:
          shouldSwitch= true;
          break;
        }
      }
    }
    if (shouldSwitch) {
      /*If a switch has been marked, make the switch
      and mark that a switch has been done:*/
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
      //Each time a switch is done, increase this count by 1:
      switchcount ++;      
    } else {
      /*If no switching has been done AND the direction is "asc",
      set the direction to "desc" and run the while loop again.*/
      if (switchcount == 0 && dir == "asc") {
        dir = "desc";
        switching = true;
      }
    }
  }
}
</script>
    </div>


<!-- /.box -->
<input type="hidden" value="" id="hdnRepoId" />
<script>

$(document).ready(function() {
    $('#btn_add_new').click(function() {
        $(".modal-body").load("/main/add", function(responseTxt, statusTxt, xhr) {
            $('.modal-title').text('Add Quote');
            $('#modalPopup').modal('show');
        });
    });
});



$(document).off(function() {
    $('#btn_delete').click(function() {
        console.log('idhar delete pe hai');
        var elem = this;

            //console.log('yeh delete vala hai');
        // $('#confirm').modal({
        //         backdrop: 'static',
        //         keyboard: false
        //     })

            // .off('click', '#delete').on('click', '#delete', function(e) {
                $.post("/restaurants/delete", { id: $(elem).attr('data-id') }, function(data) {
                    debugger
                    if (data.success)
                        $(elem).closest('li').remove();
                });
          //  })
    });

})


</script>



<!-- 
<th onclick="sortTable(0)">Name</th>


<script>
function sortTable(n) {
  var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
  table = document.getElementById("myTable");
  switching = true;
  //Set the sorting direction to ascending:
  dir = "asc"; 
  /*Make a loop that will continue until
  no switching has been done:*/
  while (switching) {
    //start by saying: no switching is done:
    switching = false;
    rows = table.getElementsByTagName("TR");
    /*Loop through all table rows (except the
    first, which contains table headers):*/
    for (i = 1; i < (rows.length - 1); i++) {
      //start by saying there should be no switching:
      shouldSwitch = false;
      /*Get the two elements you want to compare,
      one from current row and one from the next:*/
      x = rows[i].getElementsByTagName("TD")[n];
      y = rows[i + 1].getElementsByTagName("TD")[n];
      /*check if the two rows should switch place,
      based on the direction, asc or desc:*/
      if (dir == "asc") {
        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
          //if so, mark as a switch and break the loop:
          shouldSwitch= true;
          break;
        }
      } else if (dir == "desc") {
        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
          //if so, mark as a switch and break the loop:
          shouldSwitch= true;
          break;
        }
      }
    }
    if (shouldSwitch) {
      /*If a switch has been marked, make the switch
      and mark that a switch has been done:*/
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
      //Each time a switch is done, increase this count by 1:
      switchcount ++;      
    } else {
      /*If no switching has been done AND the direction is "asc",
      set the direction to "desc" and run the while loop again.*/
      if (switchcount == 0 && dir == "asc") {
        dir = "desc";
        switching = true;
      }
    }
  }
}
</script> -->